// @generated - This file is generated by atrium-codegen. DO NOT EDIT.
//!A collection of known record types.
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(tag = "$type")]
pub enum KnownRecord {
    #[cfg_attr(docsrs, doc(cfg(feature = "namespace-fmteal")))]
    #[cfg(feature = "namespace-fmteal")]
    #[serde(rename = "fm.teal.alpha.actor.profile")]
    FmTealAlphaActorProfile(Box<crate::fm::teal::alpha::actor::profile::Record>),
    #[cfg_attr(docsrs, doc(cfg(feature = "namespace-fmteal")))]
    #[cfg(feature = "namespace-fmteal")]
    #[serde(rename = "fm.teal.alpha.actor.status")]
    FmTealAlphaActorStatus(Box<crate::fm::teal::alpha::actor::status::Record>),
    #[cfg_attr(docsrs, doc(cfg(feature = "namespace-fmteal")))]
    #[cfg(feature = "namespace-fmteal")]
    #[serde(rename = "fm.teal.alpha.feed.play")]
    FmTealAlphaFeedPlay(Box<crate::fm::teal::alpha::feed::play::Record>),
}
#[cfg_attr(docsrs, doc(cfg(feature = "namespace-fmteal")))]
#[cfg(feature = "namespace-fmteal")]
impl From<crate::fm::teal::alpha::actor::profile::Record> for KnownRecord {
    fn from(record: crate::fm::teal::alpha::actor::profile::Record) -> Self {
        KnownRecord::FmTealAlphaActorProfile(Box::new(record))
    }
}
#[cfg_attr(docsrs, doc(cfg(feature = "namespace-fmteal")))]
#[cfg(feature = "namespace-fmteal")]
impl From<crate::fm::teal::alpha::actor::profile::RecordData> for KnownRecord {
    fn from(record_data: crate::fm::teal::alpha::actor::profile::RecordData) -> Self {
        KnownRecord::FmTealAlphaActorProfile(Box::new(record_data.into()))
    }
}
#[cfg_attr(docsrs, doc(cfg(feature = "namespace-fmteal")))]
#[cfg(feature = "namespace-fmteal")]
impl From<crate::fm::teal::alpha::actor::status::Record> for KnownRecord {
    fn from(record: crate::fm::teal::alpha::actor::status::Record) -> Self {
        KnownRecord::FmTealAlphaActorStatus(Box::new(record))
    }
}
#[cfg_attr(docsrs, doc(cfg(feature = "namespace-fmteal")))]
#[cfg(feature = "namespace-fmteal")]
impl From<crate::fm::teal::alpha::actor::status::RecordData> for KnownRecord {
    fn from(record_data: crate::fm::teal::alpha::actor::status::RecordData) -> Self {
        KnownRecord::FmTealAlphaActorStatus(Box::new(record_data.into()))
    }
}
#[cfg_attr(docsrs, doc(cfg(feature = "namespace-fmteal")))]
#[cfg(feature = "namespace-fmteal")]
impl From<crate::fm::teal::alpha::feed::play::Record> for KnownRecord {
    fn from(record: crate::fm::teal::alpha::feed::play::Record) -> Self {
        KnownRecord::FmTealAlphaFeedPlay(Box::new(record))
    }
}
#[cfg_attr(docsrs, doc(cfg(feature = "namespace-fmteal")))]
#[cfg(feature = "namespace-fmteal")]
impl From<crate::fm::teal::alpha::feed::play::RecordData> for KnownRecord {
    fn from(record_data: crate::fm::teal::alpha::feed::play::RecordData) -> Self {
        KnownRecord::FmTealAlphaFeedPlay(Box::new(record_data.into()))
    }
}
